import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import java.awt.Color;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;
import javax.swing.JSeparator;
import javax.swing.JButton;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import java.awt.SystemColor;
import javax.swing.JTextField;
import javax.swing.JScrollPane;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.event.ActionEvent;
import javax.swing.JList;
import javax.swing.JOptionPane;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.JComboBox;
import javax.swing.JToggleButton;

public class BuyerHomePage extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JTextField txtSearch;
	private JList lstProductReg;
	JButton btn_addToCart;
	
	ArrayList<Product> productList = new ArrayList<Product>();
	ArrayList<Cart> cartProduct = new ArrayList<Cart>();
	
	private JTextField txt_description;
	private JTextField txt_stock;
	private JTextField txt_colour;
	private JTextField txt_price;
	private JTextField txtName;
	private JTextField txtProductID;
	private JTextField txt_category;
	private JTextField txt_quantity;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					BuyerHomePage frame = new BuyerHomePage();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public BuyerHomePage() throws IOException {
		ReadFileRegisteredProduct();
		//ReadFileAddToCart();
		initialize();
	}
	public void initialize() {		
		setTitle("UKMBiz");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 897, 576);
		contentPane = new JPanel();
		contentPane.setBackground(Color.WHITE);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel panel_4 = new JPanel();
		panel_4.setBounds(0, 0, 890, 51);
		panel_4.setLayout(null);
		panel_4.setBackground(Color.RED);
		contentPane.add(panel_4);
		
		JLabel lblNewLabel_1 = new JLabel("Home");
		lblNewLabel_1.setHorizontalAlignment(SwingConstants.LEFT);
		lblNewLabel_1.setForeground(Color.WHITE);
		lblNewLabel_1.setFont(new Font("Tahoma", Font.PLAIN, 35));
		lblNewLabel_1.setBounds(174, 0, 244, 51);
		panel_4.add(lblNewLabel_1);
		
		JButton btn_LogOut = new JButton("Log Out");
		btn_LogOut.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				dispose();					
			}
		});
		btn_LogOut.setBounds(779, 10, 85, 31);
		panel_4.add(btn_LogOut);
		btn_LogOut.setForeground(Color.BLACK);
		btn_LogOut.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btn_LogOut.setBackground(Color.WHITE);
		
		JLabel lblNewLabel_2 = new JLabel("");
		lblNewLabel_2.setIcon(new ImageIcon("pictures/ukmbiz logo3.jpg"));
		lblNewLabel_2.setBounds(0, 0, 164, 51);
		panel_4.add(lblNewLabel_2);
		
		JPanel panel_1_1 = new JPanel();
		panel_1_1.setBounds(0, 50, 890, 51);
		panel_1_1.setLayout(null);
		panel_1_1.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		panel_1_1.setBackground(Color.PINK);
		contentPane.add(panel_1_1);
		
		JSeparator separator = new JSeparator();
		separator.setOrientation(SwingConstants.VERTICAL);
		separator.setForeground(Color.RED);
		separator.setBackground(Color.RED);
		separator.setBounds(176, 10, 9, 31);
		panel_1_1.add(separator);
		
		JButton btn_AllProduct = new JButton("All Products");
		btn_AllProduct.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btn_AllProduct.setBorderPainted(false);
		btn_AllProduct.setBackground(Color.PINK);
		btn_AllProduct.setBounds(7, 5, 160, 41);
		panel_1_1.add(btn_AllProduct);
		
		txtSearch = new JTextField();
		txtSearch.setFont(new Font("Tahoma", Font.PLAIN, 12));
		txtSearch.setBounds(230, 18, 135, 19);
		panel_1_1.add(txtSearch);
		txtSearch.setColumns(10);
		
		JLabel lbl_search = new JLabel("");
		lbl_search.setIcon(new ImageIcon("pictures/searchicon.png"));
		lbl_search.setBounds(195, 10, 30, 31);
		panel_1_1.add(lbl_search);
		
		JButton btn_search = new JButton("Search");
//		btn_search.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				dispose();
//				SearchProduct search = new SearchProduct();
//				search.setVisible(true);
//			}
//		});
		
		btn_search.setForeground(Color.WHITE);
		btn_search.setBackground(Color.RED);
		btn_search.setFont(new Font("Tahoma", Font.PLAIN, 12));
		btn_search.setBounds(375, 17, 74, 21);
		panel_1_1.add(btn_search);
		
		JButton btn_cart = new JButton("Cart");
//		btn_cart.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				dispose();
//				ProductinCart cart = new ProductinCart();
//				cart.setVisible(true);
//			}
//		});
		btn_cart.setBackground(Color.RED);
		btn_cart.setForeground(Color.WHITE);
		btn_cart.setFont(new Font("Tahoma", Font.PLAIN, 21));
		btn_cart.setIcon(new ImageIcon("pictures/cartIcon.png"));
		btn_cart.setBounds(716, 10, 135, 31);
		panel_1_1.add(btn_cart);
		btn_cart.addActionListener(this);
		
		JLabel lblProductId = new JLabel("Product ID :");
		lblProductId.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblProductId.setBounds(395, 132, 84, 22);
		contentPane.add(lblProductId);
		
		JLabel lblName = new JLabel("Name :");
		lblName.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblName.setBounds(395, 169, 74, 22);
		contentPane.add(lblName);
		
		JLabel lblCategory = new JLabel("Price:");
		lblCategory.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblCategory.setBounds(395, 210, 84, 22);
		contentPane.add(lblCategory);
		
		JLabel lblVariation = new JLabel("Colour:");
		lblVariation.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblVariation.setBounds(395, 253, 74, 22);
		contentPane.add(lblVariation);
		
		JLabel lblPrice = new JLabel("Category:");
		lblPrice.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblPrice.setBounds(395, 294, 74, 22);
		contentPane.add(lblPrice);
		
		JLabel lblStock = new JLabel("Stock :");
		lblStock.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblStock.setBounds(395, 329, 74, 36);
		contentPane.add(lblStock);
		
		JLabel lblDescription = new JLabel("Description :");
		lblDescription.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblDescription.setBounds(395, 375, 99, 22);
		contentPane.add(lblDescription);
		
		txt_description = new JTextField();
		txt_description.setBackground(Color.WHITE);
		txt_description.setEditable(false);
		txt_description.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_description.setColumns(10);
		txt_description.setBounds(481, 378, 303, 60);
		contentPane.add(txt_description);
		
		txt_stock = new JTextField();
		txt_stock.setBackground(Color.WHITE);
		txt_stock.setEditable(false);
		txt_stock.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_stock.setColumns(10);
		txt_stock.setBounds(481, 335, 303, 26);
		contentPane.add(txt_stock);
		
		txt_colour = new JTextField();
		txt_colour.setBackground(Color.WHITE);
		txt_colour.setEditable(false);
		txt_colour.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_colour.setColumns(10);
		txt_colour.setBounds(481, 253, 303, 26);
		contentPane.add(txt_colour);
		
		txt_price = new JTextField();
		txt_price.setBackground(Color.WHITE);
		txt_price.setEditable(false);
		txt_price.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_price.setColumns(10);
		txt_price.setBounds(481, 214, 303, 25);
		contentPane.add(txt_price);
		
		txtName = new JTextField();
		txtName.setBackground(Color.WHITE);
		txtName.setEditable(false);
		txtName.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtName.setColumns(10);
		txtName.setBounds(481, 169, 303, 25);
		contentPane.add(txtName);
		
		txtProductID = new JTextField();
		txtProductID.setBackground(Color.WHITE);
		txtProductID.setEditable(false);
		txtProductID.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txtProductID.setColumns(10);
		txtProductID.setBounds(481, 132, 303, 25);
		contentPane.add(txtProductID);
		
		txt_category = new JTextField();
		txt_category.setBackground(Color.WHITE);
		txt_category.setEditable(false);
		txt_category.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_category.setColumns(10);
		txt_category.setBounds(481, 293, 303, 26);
		contentPane.add(txt_category);
		
		btn_addToCart = new JButton("Add To Cart");
		btn_addToCart.setForeground(Color.WHITE);
		btn_addToCart.setBackground(Color.RED);
		btn_addToCart.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btn_addToCart.setBounds(629, 465, 155, 31);
		contentPane.add(btn_addToCart);
		
		btn_addToCart.addActionListener(this);
		
		lstProductReg = new JList();
		lstProductReg.setBackground(new Color(255, 228, 225));
		lstProductReg.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lstProductReg.setBounds(53, 152, 253, 344);
		if(lstProductReg.getModel().getSize() == 0) {
			
			DefaultListModel ArrList = new DefaultListModel();
		for(int i=0; i<productList.size();i++) {
			
			ArrList.addElement((i+1)+ ". "+ productList.get(i).getName());
		};
		lstProductReg.setModel(ArrList);
		}
		
		lstProductReg.addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent arg0) {
				
				
				int selectedIndex = lstProductReg.getSelectedIndex();
				setTextFieldValues(selectedIndex);
//				WriteFileAddToCart(selectedIndex);
				
			}
		});
		contentPane.add(lstProductReg);
		
		txt_quantity = new JTextField();
		txt_quantity.setBackground(Color.WHITE);
		txt_quantity.setFont(new Font("Tahoma", Font.PLAIN, 14));
		txt_quantity.setColumns(10);
		txt_quantity.setBounds(481, 465, 74, 31);
		contentPane.add(txt_quantity);
		
		JLabel lblQuantity = new JLabel("Quantity :");
		lblQuantity.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lblQuantity.setBounds(395, 469, 74, 22);
		contentPane.add(lblQuantity);
		
		JPanel panel = new JPanel();
		panel.setBackground(new Color(255, 228, 225));
		panel.setBounds(360, 92, 530, 447);
		contentPane.add(panel);
		
		JLabel lblNewLabel = new JLabel("Select to view the Product Details :");
		lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 16));
		lblNewLabel.setBounds(53, 129, 253, 13);
		contentPane.add(lblNewLabel);
	}

	public void addToCart() {
		
	}
	public void cartForm() {
		ProductinCart cart = new ProductinCart();
		cart.setVisible(true);
		dispose();
	}

	public void ReadFileRegisteredProduct() throws IOException
	{
		
		FileReader file = new FileReader("RegisteredProduct.txt");
        try (BufferedReader in = new BufferedReader(file)) {
			String input = "";
			//studentList = null;
			while((input = in.readLine())!= null)
			{
				StringTokenizer word = new StringTokenizer(input,";");
				
				String productID = word.nextToken();
				String name = word.nextToken();
				double price = Double.parseDouble(word.nextToken());
				String colour = word.nextToken();
				String category = word.nextToken();
				int stock = Integer.parseInt(word.nextToken());
				String description = word.nextToken();
				
	   			
	   			
//				int type = cmb_category.getSelectedIndex();
//				String p = null;
//
//	   			if(type == 0) {
//					p = "Fashion";
//				}
//				else if(type == 1) {
//					p = "Accessories";
//				}
//				else if(type == 2) {
//					p = "Electrical";
//				}
	   			
				Product v =null;
				
				String categoryType = "";
				
				if(categoryType.equals("Fashion"))
				{
					v = new Fashion(productID, name,  price, colour, category, stock, description);
				}
				else if(categoryType.equals("Accessories"))
				{
					v = new Accessories(productID, name,  price, colour, category, stock, description);
				}
				else if(categoryType.equals("Electrical"))
				{
					v = new Electrical(productID, name,  price, colour, category, stock, description);
				}


				Product pr = new Product(productID,name,price,colour,category,stock,description);
				
				productList.add(pr);
				
			}
		}
	}
	
	public void ReadFileAddToCart() throws IOException
	{
		
		FileReader file = new FileReader("AddToCart.txt");
        try (BufferedReader in = new BufferedReader(file)) {
			String input = "";
			//studentList = null;
			while((input = in.readLine())!= null)
			{
				StringTokenizer word = new StringTokenizer(input,";");
				
				String productID = word.nextToken();
				String name = word.nextToken();
				double price = Double.parseDouble(word.nextToken());
				String colour = word.nextToken();
				String category = word.nextToken();
				int stock = Integer.parseInt(word.nextToken());
				String description = word.nextToken();				
				int quantity = Integer.parseInt(word.nextToken());			
				
				Product pp = new Product(productID,name,price,colour,category,stock,description);
				Cart pr = new Cart(pp, quantity);
				cartProduct.add(pr);
				
				for(int i=0; i<cartProduct.size(); i++) {
					Cart c = (Cart) cartProduct.get(i);
					System.out.print(c)	;		
				}
			}
        	}
		}
//	}
	
	public void WriteFileAddToCart() {
		try {
			
			FileWriter file = new FileWriter("AddToCart.txt");
			PrintWriter out = new PrintWriter(file);
			
			for(int i=0; i<cartProduct.size(); i++) 
			{
			Cart s = (Cart)cartProduct.get(i);
				out.print(s.getP().getProductID()+";"+s.getP().getName()+";"+s.getP().getPrice()+";"+s.getP().getColour()+";"+s.getP().getCategory()+";"+s.getP().getStock()+";"+s.getP().getDescription()+";"+txt_quantity.getText());				
				out.println();
			}
			JOptionPane.showMessageDialog(null,"Add To Cart Successfully!");
            out.close();
		}
        catch(IOException ex){System.out.println("There's no such file!");}
	}
	
	public void setTextFieldValues(int selectedIndex) {
		Product item = (Product)productList.get(selectedIndex);
		
		txtProductID.setText(item.getProductID());
		txtName.setText(item.getName());
		txt_price.setText(String.valueOf(item.getPrice()));
		txt_colour.setText(item.getColour());
		txt_category.setText(item.getCategory());
		txt_stock.setText(String.valueOf(item.getPrice()));
		txt_description.setText(item.getDescription());
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		int index = lstProductReg.getSelectedIndex();

		if(e.getActionCommand().equals("Add To Cart")) {
			String productID = txtProductID.getText();
			String name = txtName.getText();
			double price = Double.parseDouble(txt_price.getText());
			String colour = txt_colour.getText();
			String category = txt_category.getText();
			int stock = Integer.parseInt(txt_stock.getText());
			String description = txt_description.getText();
			int quantity = Integer.parseInt(txt_quantity.getText());
			
			Product pp = new Product(productID,name,price,colour,category,stock,description);
			Cart pr = new Cart(pp, quantity);
			cartProduct.add(pr);
			
			for(int i=0; i<cartProduct.size(); i++) {
				Cart c = (Cart) cartProduct.get(i);
				System.out.print(c)	;		
			}
			WriteFileAddToCart();
		}
		else if(e.getActionCommand().equals("Cart")) {
			cartForm();
		}
		else if(e.getActionCommand().equals("Log Out")) {
			dispose();
		}
	}
}
